// Original file: src/grpc/proto/vulnerability.proto

import type * as grpc from '@grpc/grpc-js'
import type { MethodDefinition } from '@grpc/proto-loader'
import type { Empty as _Empty, Empty__Output as _Empty__Output } from './Empty';
import type { Pentester as _Pentester, Pentester__Output as _Pentester__Output } from './Pentester';
import type { Vulnerability as _Vulnerability, Vulnerability__Output as _Vulnerability__Output } from './Vulnerability';
import type { VulnerabilityId as _VulnerabilityId, VulnerabilityId__Output as _VulnerabilityId__Output } from './VulnerabilityId';

export interface VulnerabilityServiceClient extends grpc.Client {
  AddVulnerability(argument: _Vulnerability, metadata: grpc.Metadata, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  AddVulnerability(argument: _Vulnerability, metadata: grpc.Metadata, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  AddVulnerability(argument: _Vulnerability, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  AddVulnerability(argument: _Vulnerability, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  addVulnerability(argument: _Vulnerability, metadata: grpc.Metadata, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  addVulnerability(argument: _Vulnerability, metadata: grpc.Metadata, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  addVulnerability(argument: _Vulnerability, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  addVulnerability(argument: _Vulnerability, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  
  DeleteVulnerability(argument: _VulnerabilityId, metadata: grpc.Metadata, options: grpc.CallOptions, callback: grpc.requestCallback<_Empty__Output>): grpc.ClientUnaryCall;
  DeleteVulnerability(argument: _VulnerabilityId, metadata: grpc.Metadata, callback: grpc.requestCallback<_Empty__Output>): grpc.ClientUnaryCall;
  DeleteVulnerability(argument: _VulnerabilityId, options: grpc.CallOptions, callback: grpc.requestCallback<_Empty__Output>): grpc.ClientUnaryCall;
  DeleteVulnerability(argument: _VulnerabilityId, callback: grpc.requestCallback<_Empty__Output>): grpc.ClientUnaryCall;
  deleteVulnerability(argument: _VulnerabilityId, metadata: grpc.Metadata, options: grpc.CallOptions, callback: grpc.requestCallback<_Empty__Output>): grpc.ClientUnaryCall;
  deleteVulnerability(argument: _VulnerabilityId, metadata: grpc.Metadata, callback: grpc.requestCallback<_Empty__Output>): grpc.ClientUnaryCall;
  deleteVulnerability(argument: _VulnerabilityId, options: grpc.CallOptions, callback: grpc.requestCallback<_Empty__Output>): grpc.ClientUnaryCall;
  deleteVulnerability(argument: _VulnerabilityId, callback: grpc.requestCallback<_Empty__Output>): grpc.ClientUnaryCall;
  
  GetVulnerability(argument: _VulnerabilityId, metadata: grpc.Metadata, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  GetVulnerability(argument: _VulnerabilityId, metadata: grpc.Metadata, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  GetVulnerability(argument: _VulnerabilityId, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  GetVulnerability(argument: _VulnerabilityId, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  getVulnerability(argument: _VulnerabilityId, metadata: grpc.Metadata, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  getVulnerability(argument: _VulnerabilityId, metadata: grpc.Metadata, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  getVulnerability(argument: _VulnerabilityId, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  getVulnerability(argument: _VulnerabilityId, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  
  ListPentesters(argument: _Empty, metadata: grpc.Metadata, options?: grpc.CallOptions): grpc.ClientReadableStream<_Pentester__Output>;
  ListPentesters(argument: _Empty, options?: grpc.CallOptions): grpc.ClientReadableStream<_Pentester__Output>;
  listPentesters(argument: _Empty, metadata: grpc.Metadata, options?: grpc.CallOptions): grpc.ClientReadableStream<_Pentester__Output>;
  listPentesters(argument: _Empty, options?: grpc.CallOptions): grpc.ClientReadableStream<_Pentester__Output>;
  
  ListVulnerabilities(argument: _Empty, metadata: grpc.Metadata, options?: grpc.CallOptions): grpc.ClientReadableStream<_Vulnerability__Output>;
  ListVulnerabilities(argument: _Empty, options?: grpc.CallOptions): grpc.ClientReadableStream<_Vulnerability__Output>;
  listVulnerabilities(argument: _Empty, metadata: grpc.Metadata, options?: grpc.CallOptions): grpc.ClientReadableStream<_Vulnerability__Output>;
  listVulnerabilities(argument: _Empty, options?: grpc.CallOptions): grpc.ClientReadableStream<_Vulnerability__Output>;
  
  UpdateVulnerability(argument: _Vulnerability, metadata: grpc.Metadata, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  UpdateVulnerability(argument: _Vulnerability, metadata: grpc.Metadata, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  UpdateVulnerability(argument: _Vulnerability, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  UpdateVulnerability(argument: _Vulnerability, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  updateVulnerability(argument: _Vulnerability, metadata: grpc.Metadata, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  updateVulnerability(argument: _Vulnerability, metadata: grpc.Metadata, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  updateVulnerability(argument: _Vulnerability, options: grpc.CallOptions, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  updateVulnerability(argument: _Vulnerability, callback: grpc.requestCallback<_Vulnerability__Output>): grpc.ClientUnaryCall;
  
}

export interface VulnerabilityServiceHandlers extends grpc.UntypedServiceImplementation {
  AddVulnerability: grpc.handleUnaryCall<_Vulnerability__Output, _Vulnerability>;
  
  DeleteVulnerability: grpc.handleUnaryCall<_VulnerabilityId__Output, _Empty>;
  
  GetVulnerability: grpc.handleUnaryCall<_VulnerabilityId__Output, _Vulnerability>;
  
  ListPentesters: grpc.handleServerStreamingCall<_Empty__Output, _Pentester>;
  
  ListVulnerabilities: grpc.handleServerStreamingCall<_Empty__Output, _Vulnerability>;
  
  UpdateVulnerability: grpc.handleUnaryCall<_Vulnerability__Output, _Vulnerability>;
  
}

export interface VulnerabilityServiceDefinition extends grpc.ServiceDefinition {
  AddVulnerability: MethodDefinition<_Vulnerability, _Vulnerability, _Vulnerability__Output, _Vulnerability__Output>
  DeleteVulnerability: MethodDefinition<_VulnerabilityId, _Empty, _VulnerabilityId__Output, _Empty__Output>
  GetVulnerability: MethodDefinition<_VulnerabilityId, _Vulnerability, _VulnerabilityId__Output, _Vulnerability__Output>
  ListPentesters: MethodDefinition<_Empty, _Pentester, _Empty__Output, _Pentester__Output>
  ListVulnerabilities: MethodDefinition<_Empty, _Vulnerability, _Empty__Output, _Vulnerability__Output>
  UpdateVulnerability: MethodDefinition<_Vulnerability, _Vulnerability, _Vulnerability__Output, _Vulnerability__Output>
}
